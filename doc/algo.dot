digraph {
        "HandleDigit"[shape=record,style=filled];
        "HandleBlank"[shape=record,style=filled];
        "HandleOther"[shape=record,style=filled];

        "cb?"[style=filled,fillcolor="#CCFFCC"];

        "init-state" -> "HandleDigit";
        "init-state" -> "HandleOther";
        "init-state" -> "digit?";

        "anon-" -> "init-state";
        "anon-" -> "HandleDigit-nxt";
        "anon-" -> "HandleBlank-nxt";
        "anon-" -> "HandleOther-nxt";

        "anon" -> "anon-";
        "anon" -> "HandleDigit-out";
        "anon" -> "HandleBlank-out";
        "anon" -> "HandleOther-out";

        subgraph "cluster-states" {
                "HandleOther" -> "HandleOther-nxt";
                "HandleOther" -> "HandleOther-out";
                
                "HandleDigit" -> "HandleDigit-nxt";
                "HandleDigit" -> "HandleDigit-out";
                
                "HandleBlank" -> "HandleBlank-nxt";
                "HandleBlank" -> "HandleBlank-out";
                
                "HandleOther-nxt" -> "char-type";
                "HandleOther-nxt" -> "HandleOther";
                "HandleOther-nxt" -> "HandleDigit";
                
                "HandleOther-out" -> "anon-partial";
                
                "HandleBlank-nxt" -> "char-type";
                "HandleBlank-nxt" -> "maybe-add";
                "HandleBlank-nxt" -> "HandleDigit";
                "HandleBlank-nxt" -> "HandleBlank";
                "HandleBlank-nxt" -> "HandleOther";
                
                "HandleBlank-out" -> "maybe-add";
                
                "HandleDigit-nxt" -> "char-type";
                "HandleDigit-nxt" -> "maybe-anon";
                "HandleDigit-nxt" -> "HandleDigit";
                "HandleDigit-nxt" -> "HandleBlank";
                "HandleDigit-nxt" -> "HandleOther";
                
                "HandleDigit-out" -> "maybe-anon";
        }

        "anon-partial" -> "anon-acc";

        "maybe-add" -> "digit?";

        "acc-full?" -> "cc-max-size";

        "blank?" -> "char-type";

        "extract-blanks" -> "cc-max-size";
        "extract-blanks" -> "blank?";

        "digit?" -> "char-type";

        "extract-digits" -> "digit?";

        "recompose-out" -> "anon-char";
        "recompose-out" -> "insert-blanks";

        "merge-combin-cb" -> "cc-max-size";

        "coords" -> "cc-min-size";
        "coords" -> "cc-max-size";

        "subvec-cb" -> "coords";

        "cb?" -> "sum-ddigits";
        "cb?" -> "double-digits";

        "combin-cb" -> "subvec-cb";
        "combin-cb" -> "cb?";

        "anon-bits" -> "cc-max-size";
        "anon-bits" -> "combin-cb";
        "anon-bits" -> "merge-combin-cb";

        "anon-acc" -> "extract-digits";
        "anon-acc" -> "extract-blanks";
        "anon-acc" -> "anon-bits";
        "anon-acc" -> "merge-anon-bits";
        "anon-acc" -> "recompose-out";
        "anon-acc" -> "insert-blanks";

        "maybe-anon" -> "acc-full?";
        "maybe-anon" -> "anon-acc";
}